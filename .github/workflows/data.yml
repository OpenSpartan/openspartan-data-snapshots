name: "Acquire Data"

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  repository_dispatch:
  workflow_dispatch:
      
jobs:
  build:
    environment: Production
    runs-on: windows-latest
    if: (github.event_name == 'pull_request' || github.event_name == 'push') && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Build
    env:
      SL_CLIENT_ID: ${{ secrets.SL_CLIENT_ID }}
      SL_CLIENT_SECRET: ${{ secrets.SL_CLIENT_SECRET }}
      SL_REFRESH_TOKEN: ${{ secrets.SL_REFRESH_TOKEN }}
      SL_GITHUB_TOKEN: ${{ secrets.SL_GITHUB_TOKEN }}
      SL_BUILD_ID: ${{ secrets.SL_BUILD_ID }}
      SL_PROJECT_ID: ${{ secrets.SL_PROJECT_ID }}

    steps:
    - uses: actions/checkout@v2
    - name: Download StatLink
      run: Invoke-WebRequest https://github.com/dend/openspartan-statlink/releases/download/v0.0.9/ossl-windows-latest.zip -OutFile ossl-windows-latest.zip
    - name: Extract StatLink
      run: Expand-Archive -Path ossl-windows-latest.zip -DestinationPath _statlink
    - name: List content in the current folder
      run: ls
    - name: Refresh token & store it
      run: |
        $data = . ${{ github.workspace }}\_statlink\finalbuild-windows-latest\OpenSpartan.StatLink.exe refresh --client-id $Env:SL_CLIENT_ID --client-secret $Env:SL_CLIENT_SECRET --redirect-url https://localhost --refresh-token $Env:SL_REFRESH_TOKEN | ConvertFrom-Json
        $keyData = curl -H @{"Accept" = "application/vnd.github.v3+json"; "Authorization" = "token $env:SL_GITHUB_TOKEN"} https://api.github.com/repos/dend/openspartan-data-snapshots/actions/secrets/public-key | ConvertFrom-Json
        foreach ($info in $keyData.PSObject.Properties) { Write-Output $info.Name }
        Write-Output "Got key data."
        Write-Output $keyData
        $encryptedRefreshToken = ${{ github.workspace }}\_statlink\finalbuild-windows-latest\OpenSpartan.StatLink.exe prepsecret --secret $data.RefreshToken --public-key $keyData.key
        $encryptedAccessToken = ${{ github.workspace }}\_statlink\finalbuild-windows-latest\OpenSpartan.StatLink.exe prepsecret --secret $data.AccessToken --public-key $keyData.key
        curl -X PUT -H @{"Accept" = "application/vnd.github.v3+json"; "Authorization" = "token ${Env:SL_GITHUB_TOKEN}"} https://api.github.com/repos/dend/openspartan-data-snapshots/actions/secrets/SL_REFRESH_TOKEN -d '{"encrypted_value":"$encryptedRefreshToken","key_id":"$($keyData.key_id)"}'
        curl -X PUT -H @{"Accept" = "application/vnd.github.v3+json"; "Authorization" = "token ${Env:SL_GITHUB_TOKEN}"} https://api.github.com/repos/dend/openspartan-data-snapshots/actions/secrets/SL_ACCESS_TOKEN -d '{"encrypted_value":"$encryptedAccessToken","key_id":"$($keyData.key_id)"}'
    - name: Get data
      run: |
        . ${{ github.workspace }}\_statlink\finalbuild-windows-latest\OpenSpartan.StatLink.exe getstats --auth-token ${Env:SL_ACCESS_TOKEN} --build-id ${Env:SL_BUILD_ID} --project-id ${Env:SL_PROJECT_ID} --out data
    - name: Commit changes
      run: |
        git add -A -v
        git config --global user.name 'Den Delimarsky'
        git config --global user.email '1389609+dend@users.noreply.github.com'
        git commit -m "Updating snapshot with data."
        git push origin main
